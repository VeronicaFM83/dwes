https://github.com/VeronicaFM83/tareagitcampus.git


--- HTML5 ---

Plantilla básica HTML5 para integrar JavaScript

<!DOCTYPE HTML>
<html lang='es'>
<head>
	<title>Plantillabásica</title>
<meta charset='UTF-8' />
<script>
//Codigo JS
</script>
</head>

<body>
<script>
//Codigo JS
</script>
</body>
</html>

--- console.log ---

console.log(Object.keys(nombreObj));
console.log(Object.values(nombreObj));

-- tablas --- 
https://www.uv.es/jac/guia/tablaeje.htm

--- funciones predefinidas ---
https://developer.mozilla.org/es/docs/Web/JavaScript/Guide/Funciones

--- Métodos STRING prototype ---
https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Objetos_globales/String/prototype

--- eliminar espacios en blanco String ----

const texto = "    Texto de ejemplo     "
let procesado

// replace() usando una expresión Regex para reemplazar espacios en blanco
procesado = texto.replace(/\s+/g, '')  // > "Textodeejemplo"

\s: selecciona espacios en blanco, tabulaciones y saltos de linea.
+: en conjunto con \s sirve para tomar espacios consecutivos, de esta forma si hay 1 o mas espacios seguidos se eliminaran en conjunto.
g: permite repetir el proceso a lo largo del string o cadena, de otra forma solo se eliminaría el primer espacio encontrado
https://pixonauta.com/snippets/javascript/eliminar-espacios-en-blanco-de-un-string-con-javascript/


--- Expresion regular CONTRASEÑA -- 
La siguente expresión regular nos permite verificar que una contraseña contiene letras tanto en mayusculas y minusculas como caracteres numericos. También verifica que el tamaño de la contraseña sea de 6 a 15 caracteres.

^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{6,15}$

en este caso, (?=.*\d) verifica la existencia de un caracter numerico, (?=.*[a-z]) la de una letra minuscula y (?=.*[A-Z]) la de una letra en mayusculas. Por ultimo la longitud la verificamos con los valores entre llaves {6,15}.

--- HAS-HMAC CIFRADO ---
https://www.php.net/manual/es/function.hash-hmac.php

--- EJEMPLOS CODIGOS FACILES WEB --

https://norfipc.com/web/javascript-facil-paginas-web-ejemplos.html

--- CHAR UNICODE ---
A = 65
Z = 90


--- Ordenado un ARRAY por atributo de objetos ---

https://deployando.net/2012/08/16/js-ordenar-arreglos-objetos/


--- encontrar un objeto en un array por un atributo ---
var nicknames= [
    {id:"100", nickname:"Juan"},
    {id:"200", nickname:"Mateo"}
];
/**
 * Devolverá un arreglo con el objeto a buscar o uno vacio si no lo encuentra.
 */
var nickname = nicknames.filter(function(nickname) {
    return nickname.id === "100";
});
/**
 * Devolverá el arreglo requerido o null si no lo encuentra.
 */
var nickname = nicknames.reduce(function(value, nickname) {
    return nickname.id === "100" ? nickname : null;
}, null);
/**
 * Devolverá el objeto que coincida con la llave-valor indicados como
 * argumentos de la función.
 *
 * @param String column    El nombre de la columna o llave de referencia
 * @param Any value        El valor buscado sobre la columna indicada
 * @return [Object|Null]   Devolverá null en caso de no hallar coincidencia, en caso contrario devolverá el objeto coincidente
 */
Array.prototype.findBy = function (column, value) {
    for (var i=0; i<this.length; i++) {
        var object = this[i];
        if (column in object && object[column] === value) {
            return object;
        }
    }

    return null;
}
El ejemplo de uso quedaría de la siguiente forma:

var nickname = nicknames.findBy('id', '100');


--- Devolver nombre propiedades de objeto KEYS --- 

https://www.codegrepper.com/code-examples/javascript/devolver+nombre+propiedades+de+objeto+javascript


--- Trucos pasar parametros a funcion --- 

https://lacodigoteca.com/javascript/pasar-parametros-a-una-funcion-js/


-- arrays --- 
https://es.javascript.info/array

--- array a string sin comas --- 
var str = array.join(" ");

--- temporizador, contador, cronometro ---
https://www.freecodecamp.org/espanol/news/eventos-de-tiempo-en-javascript-settimeout-y-setinterval/

var x = setInterval(cuentaAtras, 1000);



--- ARRAY splice, slice, split --
https://medium.com/@jeanpan/javascript-splice-slice-split-745b1c1c05d2

--- STRING substr() replace() slice() ---
string.replace('characterToReplace', '');
str = 'AppDividend'; // AppDividend
newStr = str.replace(/D/g, ''); // Appividend
newStr = str.substr(1, str.length); // ppDividend




https://appdividend.com/2020/08/01/javascript-remove-character-from-string-example/#:~:text=JavaScript%20String%20slice%20%28%29%20function%20is%20used%20to,assumed%20to%20be%20the%20length%20of%20the%20string.


-- Expresiones regulares --- 
https://appdividend.com/2018/10/05/javascript-regular-expressions-example-tutorial/

--- Eliminar acentos --

       const removeAccents = (str) => {
            return str.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
        } 
		
normalize()Al usar NFD  la forma normal Unicode descompone los grafemas combinados en la combinación de unos simples. El ède Crèmetermina expresado como e+  ̀.
Usando una clase de carácter regex para que coincida con el rango U + 0300 → U + 036F, ahora es trivial deshacerse globalmente de los diacríticos, que el estándar Unicode agrupa convenientemente como el bloque Unicode de combinación de marcas diacríticas .